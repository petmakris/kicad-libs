#!/usr/bin/env python3

import os
import glob
import yaml
from pathlib import Path
# from bs4 import BeautifulSoup
from html5print import HTMLBeautifier
from jinja2 import Template

# TODO: use cross OS separator 

KICAD_LIBS = os.getenv('KICAD_LIBS') 
INDEX_FILES = KICAD_LIBS + '/**/index.yaml'
REPORT_FILENAME = KICAD_LIBS + '/index.html'
HTML_TEMPLATE_FILENAME = KICAD_LIBS + '/doc/html/index-jinja-template.html'


def read_index_files_to_dict():
     docs = {}
     for index_filename in glob.iglob(INDEX_FILES, recursive=True):
          with open(index_filename, "r") as stream:
               print("Loading [%s]" % index_filename)
               docs[index_filename] = yaml.safe_load(stream)
     return docs


def prefix_kicad_libs(val):
     return val.replace(KICAD_LIBS, '${KICAD_LIBS}')


def get_template_data(data_map):
     d = []
     for index_filename, data in data_map.items():
          path = Path(index_filename)

          directory = str(path.parent)
          
          datasheet = ''

          if 'datasheet' in data and data['datasheet'] != None:
               datasheet = directory + '/' + data['datasheet']

          description = data['description']

          distributors = []
          if 'distributors' in data:
               distributors = data['distributors']

          values = {
               'name': path.parent.name,
               'directory': prefix_kicad_libs(directory),
               'description': description,
               'datasheet': datasheet,
               'image': directory + '/index.png',
               'distributors': distributors
          }
          

          d.append(values)

     return d


def validate(index_data_map):
     # ensure all properties present in all files
     return index_data_map

# what about sorting order?

# use relative paths for links and images?

def main():
     data = get_template_data(validate(read_index_files_to_dict()))

     with open(HTML_TEMPLATE_FILENAME, 'r') as html_template_filename:
          with open(REPORT_FILENAME, 'w') as report_file:
               t = Template(html_template_filename.read())
               report_file.write(t.render(parts=data))


if __name__ == '__main__':
     os.chdir(KICAD_LIBS)
     main()


